apiVersion: v1
kind: Template
labels:
  template: maven-cd-app-jenkins-pipeline
metadata:
  annotations:
    description: Application template for a Java Maven application with CD
    iconClass: icon-tomcat
    tags: java,jenkins-ci
  name: maven-cd-app-jenkins-pipeline
objects:
  - apiVersion: v1
    kind: ImageStream
    metadata:
      labels:
        application: ${APPLICATION_NAME}
      name: ${APPLICATION_NAME}
      namespace: ${NAMESPACE}
  - kind: "BuildConfig"
    apiVersion: "v1"
    metadata:
      labels:
        application: ${APPLICATION_NAME}
      name: "${APPLICATION_NAME}-pipeline"
      namespace: "${NAMESPACE}"
    spec:
      source:
        type: Git
        git:
          uri: "${SOURCE_REPOSITORY_URL}"
          ref: "${SOURCE_REPOSITORY_REF}"
        contextDir: "${CONTEXT_DIR}"
        sourceSecret:
          name: "${SOURCE_SECRET_NAME}"
      triggers:
        - type: "GitHub"
          github:
            secret: "${GITHUB_WEBHOOK_SECRET}"
        - type: "ConfigChange"
      strategy:
        type: "JenkinsPipeline"
        jenkinsPipelineStrategy:
          jenkinsfilePath: "${PIPELINE_SCRIPT}"
          env:
            - name: "APPLICATION_NAME"
              value: "${APPLICATION_NAME}"
            - name: "APPLICATION_SOURCE_REPO"
              value: "${APPLICATION_SOURCE_REPO}"
            - name: "APPLICATION_SOURCE_REF"
              value: "${APPLICATION_SOURCE_REF}"
            - name: "BUILD_CONTEXT_DIR"
              value: "${APPLICATION_CONTEXT_DIR}"
            - name: "GIT_CREDENTIAL_ID"
              value: "${NAMESPACE}-${SOURCE_SECRET_NAME}"
  - apiVersion: v1
    kind: BuildConfig
    metadata:
      labels:
        application: ${APPLICATION_NAME}
      name: ${APPLICATION_NAME}
      namespace: "${NAMESPACE}"
    spec:
      output:
        to:
          kind: ImageStreamTag
          name: ${APPLICATION_NAME}:latest
      source:
        binary: {}
        type: Binary
      strategy:
        sourceStrategy:
          from:
            kind: ImageStreamTag
            name: ${IMAGE_STREAM_TAG_NAME}
            namespace: ${IMAGE_STREAM_NAMESPACE}
        type: Source
  - apiVersion: v1
    kind: Secret
    metadata:
      labels:
        credential.sync.jenkins.openshift.io: "true"
      name: ${SOURCE_SECRET_NAME}
      namespace: '${NAMESPACE}'
    type: Opaque
    stringData:
      username: "${GIT_USERNAME}"
      password: "${GIT_PASSWORD}"
parameters:
  - description: The name for the application.
    name: APPLICATION_NAME
    required: true
    value: maven-cd-app
  - description: The namespace to deploy into
    name: NAMESPACE
    required: true
  - description: Git source URI for application
    name: SOURCE_REPOSITORY_URL
    required: true
    value: https://github.com/monodot/maven-cd-pipeline.git
  - description: Git branch/tag reference
    name: SOURCE_REPOSITORY_REF
    value: master
  - description: Path within Git project where Jenkinsfile is located; empty for root project directory.
    name: CONTEXT_DIR
    value:
  - description: Source code repo for demo app
    name: APPLICATION_SOURCE_REPO
    required: true
    value: https://github.com/monodot/maven-cd-pipeline.git
  - description: Source code branch for demo app
    name: APPLICATION_SOURCE_REF
    value: master
  - description: Directory where POM file will be
    name: APPLICATION_CONTEXT_DIR
    required: true
    value: maven-cd-app
  - description: Name of the Git secret to create that Jenkins will use
    name: SOURCE_SECRET_NAME
    required: true
    value: maven-cd-app-git
  - description: Path within Git project pointing to the pipeline run script
    name: PIPELINE_SCRIPT
    value: Jenkinsfile
  - description: GitHub trigger secret
    from: '[a-zA-Z0-9]{8}'
    generate: expression
    name: GITHUB_WEBHOOK_SECRET
    required: true
  - description: Generic build trigger secret
    from: '[a-zA-Z0-9]{8}'
    generate: expression
    name: GENERIC_WEBHOOK_SECRET
    required: true
  - description: Namespace in which the ImageStreams for Red Hat Middleware images are
      installed. These ImageStreams are normally installed in the openshift namespace.
      You should only need to modify this if you've installed the ImageStreams in a
      different namespace/project.
    name: IMAGE_STREAM_NAMESPACE
    required: true
    value: openshift
  - description: Image stream tag for the image you'd like to use to build the application
    name: IMAGE_STREAM_TAG_NAME
    required: true
    value: redhat-openjdk18-openshift:1.1
  - name: GIT_USERNAME
    description: Username to the application's Git repo
    required: true
  - name: GIT_PASSWORD
    description: Password to the application's Git repo
    required: true
